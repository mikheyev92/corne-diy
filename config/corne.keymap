/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>  // Добавляем поддержку выходов

/ {
    zmk,output {
        compatible = "zmk,output-ble";
        priority = 1;  // Устанавливаем приоритет BLE
        outputs = <&out OUT_BLE>;  // Указываем выход BLE
    };

    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESC>;
            key-positions = <0 11>;
        };

        OpenParenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        OpenBrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <18 19>;
        };

        OpenBracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <30 31>;
        };

        CloseParenthasis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 7>;
        };

        CloseBrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <19 20>;
        };

        CloseBracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <31 32>;
        };

        LessThan {
            bindings = <&kp LESS_THAN>;
            key-positions = <3 4>;
        };

        GreatherThan {
            bindings = <&kp GREATER_THAN>;
            key-positions = <4 5>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp TAB &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp BSPC
                &kp LEFT_SHIFT &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMI &kp ENTER
                &kp LCTRL &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &mt COMMA DOT &mt SQT DOUBLE_QUOTES &mt STAR FSLH &kp ESC
                                  &kp LGUI &kp LEFT_ALT &kp SPACE &kp SPACE &mo 2 &mo 1
            >;
        };
    };
};
