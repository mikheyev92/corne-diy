/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESC>;
            key-positions = <0 11>;
        };

        OpenParenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        OpenBrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <18 19>;
        };

        OpenBracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <30 31>;
        };

        CloseParenthasis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 7>;
        };

        CloseBrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <19 20>;
        };

        CloseBracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <31 32>;
        };

        LessThan {
            bindings = <&kp LESS_THAN>;
            key-positions = <3 4>;
        };

        GreatherThan {
            bindings = <&kp GREATER_THAN>;
            key-positions = <4 5>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENTR |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   | ./, | '/" |  /* | EQU |
            //                    | GUI | LWR | SPC |   | SPC | L2   | L1  |

            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E     &kp R         &kp T        &kp Y          &kp U      &kp I          &kp O                  &kp P          &kp BSPC
&kp TAB         &kp A  &kp S  &kp D     &kp F         &kp G        &kp H          &kp J      &kp K          &kp L                  &kp SEMI       &kp ENTER
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C     &kp V         &kp B        &kp N          &kp M      &mt COMMA DOT  &mt SQT DOUBLE_QUOTES  &mt STAR FSLH  &kp ESC
                              &kp LGUI  &kp LEFT_ALT  &kp SPACE    &kp BACKSPACE  &kp LCTRL  &kp ENTER
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // | SYSR |     |     |     |     |     |   |     |  1  |  2  |  3  |  0  |      |
            // |      |     |     | UP  |     |     |   |     |  4  |  5  |  6  |     |      |
            // |      |     | LFT | DWN | RGT |     |   |     |  7  |  8  |  9  |     |      |
            //                    |     |     | SPC |   | SPC |     |     |

            bindings = <
&sys_reset  &msc SCRL_DOWN  &trans          &mmv MOVE_UP    &trans           &trans       &trans     &trans          &kp UP          &trans     &kp PG_UP      &kp HOME
&trans      &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans       &trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp PAGE_DOWN  &kp END
&trans      &trans          &trans          &trans          &trans           &mkp RCLK    &trans     &trans          &trans          &trans     &trans         &trans
                                            &trans          &mkp LCLK        &kp SPACE    &kp SPACE  &trans          &trans
            >;
        };

        num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  &  |  %  |   |  ^  |  $  |  *  |  (  |  )  | BSPC |
            // | CTRL |MUTE |V_UP |V_DWN|  <  |  >  |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | SPC |     | ALT |

            bindings = <
&kp GRAVE  &kp DELETE  &trans     &kp LPAR          &kp RPAR           &kp NUBS            &kp FSLH   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS  &kp BSPC
&trans     &kp MINUS   &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp GREATER_THAN    &kp ASTRK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS   &kp EQUAL
&trans     &kp K_UNDO  &kp K_CUT  &kp K_COPY        &kp K_PASTE        &kp K_REDO          &kp COMMA  &kp N1        &kp NUMBER_2  &kp NUMBER_3  &kp DOT    &kp ENTER
                                  &kp LGUI          &trans             &kp SPACE           &kp SPACE  &trans        &kp N0
            >;
        };

        adjust {
            bindings = <
&trans  &trans  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOLUME_UP  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans        &kp K_PLAY_PAUSE  &trans           &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans        &trans            &trans           &trans    &trans  &trans  &trans  &trans  &trans  &trans
                              &trans            &trans           &trans    &trans  &trans  &trans
            >;
        };

        RU {
            bindings = <
&kp ESCAPE      &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &kp RU_CYRILLIC_IE    &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA  &kp RU_CYRILLIC_SHCHA  &kp RU_CYRILLIC_ZE   &kp RU_CYRILLIC_HA
&kp TAB         &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE    &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O          &kp RU_CYRILLIC_EL   &kp RU_CYRILLIC_DE     &kp RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LEFT_SHIFT  &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I     &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE   &kp RU_CYRILLIC_YU     &kp FSLH             &trans
                                                               &kp LEFT_COMMAND    &kp LEFT_ALT        &kp SPACE             &kp BACKSPACE       &kp RCTRL                  &kp ENTER
            >;
        };
    };
};

//For new Layers
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
